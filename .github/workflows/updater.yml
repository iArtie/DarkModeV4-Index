name: Update Texture Packs JSON

on:
  issues:
    types: [opened]

jobs:
  update-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract issue parameters and update JSON
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Extraer parámetros del cuerpo de la issue
          TYPE=$(echo "$ISSUE_BODY" | sed -n '/### TexturePack Type/,/###/p' | tail -n +2 | head -n 1 | xargs)
          VERSION=$(echo "$ISSUE_BODY" | sed -n '/### Version/,/###/p' | tail -n +2 | head -n 1 | xargs)
          DOWNLOAD=$(echo "$ISSUE_BODY" | sed -n '/### Download Link/,/###/p' | tail -n +2 | head -n 1 | xargs)

          # Validar formato de la versión
          if ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Invalid version format. Must match X.Y.Z (e.g., 1.0.0)."
            exit 1
          fi

          # Validar enlace de descarga
          if ! [[ "$DOWNLOAD" =~ ^https?:// ]]; then
            echo "Error: Invalid download link. Must be a valid URL."
            exit 1
          fi

          # Leer y actualizar el archivo JSON
          JSON_FILE="texturepacks.json"
          UPDATED_JSON=$(jq --arg type "$TYPE" --arg version "$VERSION" --arg download "$DOWNLOAD" \
            '.[$type][$version] = { download: $download }' "$JSON_FILE")

          # Sobreescribir el archivo
          echo "$UPDATED_JSON" > "$JSON_FILE"

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add texturepacks.json
          git commit -m "Update texturepacks.json from issue #${{ github.event.issue.number }}"
          git push
